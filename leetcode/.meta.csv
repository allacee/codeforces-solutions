slug,difficulty,id,lang,tags
two-sum,Easy,1,['golang'],"['Array', 'Hash Table']"
palindrome-number,Easy,9,['golang'],['Math']
add-two-numbers,Medium,2,['golang'],"['Linked List', 'Math', 'Recursion']"
longest-substring-without-repeating-characters,Medium,3,['golang'],"['Hash Table', 'String', 'Sliding Window']"
median-of-two-sorted-arrays,Hard,4,['golang'],"['Array', 'Binary Search', 'Divide and Conquer']"
longest-common-prefix,Easy,14,['golang'],['String']
roman-to-integer,Easy,13,['golang'],"['Hash Table', 'Math', 'String']"
implement-strstr,Easy,28,['golang'],"['Two Pointers', 'String', 'String Matching']"
repeated-substring-pattern,Easy,459,['golang'],"['String', 'String Matching']"
sudoku-solver,Hard,37,['golang'],"['Array', 'Backtracking', 'Matrix']"
valid-sudoku,Medium,36,['golang'],"['Array', 'Hash Table', 'Matrix']"
string-to-integer-atoi,Medium,8,['golang'],['String']
check-if-numbers-are-ascending-in-a-sentence,Easy,2042,['golang'],['String']
maximum-subarray,Easy,53,['golang'],"['Array', 'Divide and Conquer', 'Dynamic Programming']"
word-frequency,Medium,192,['bash'],['Shell']
counting-bits,Easy,338,['golang'],"['Dynamic Programming', 'Bit Manipulation']"
search-in-rotated-sorted-array,Medium,33,['golang'],"['Array', 'Binary Search']"
climbing-stairs,Easy,70,['golang'],"['Math', 'Dynamic Programming', 'Memoization']"
pascals-triangle,Easy,118,['golang'],"['Array', 'Dynamic Programming']"
sort-colors,Medium,75,['golang'],"['Array', 'Two Pointers', 'Sorting']"
3sum,Medium,15,['golang'],"['Array', 'Two Pointers', 'Sorting']"
is-subsequence,Easy,392,['golang'],"['Two Pointers', 'String', 'Dynamic Programming']"
valid-parentheses,Easy,20,['golang'],"['String', 'Stack']"
simplify-path,Medium,71,['golang'],"['String', 'Stack']"
arithmetic-slices,Medium,413,['golang'],"['Array', 'Dynamic Programming']"
merge-two-sorted-lists,Easy,21,['golang'],"['Linked List', 'Recursion']"
linked-list-cycle,Easy,141,['golang'],"['Hash Table', 'Linked List', 'Two Pointers']"
reverse-string,Easy,344,['golang'],"['Two Pointers', 'String', 'Recursion']"
valid-palindrome-ii,Easy,680,['golang'],"['Two Pointers', 'String', 'Greedy']"
find-center-of-star-graph,Easy,1791,['golang'],['Graph']
all-paths-from-source-to-target,Medium,797,['golang'],"['Backtracking', 'Depth-First Search', 'Breadth-First Search', 'Graph']"
next-permutation,Medium,31,['golang'],"['Array', 'Two Pointers']"
build-array-from-permutation,Easy,1920,['golang'],"['Array', 'Simulation']"
concatenation-of-array,Easy,1929,['golang'],['Array']
swapping-nodes-in-a-linked-list,Medium,1721,['golang'],"['Linked List', 'Two Pointers']"
container-with-most-water,Medium,11,['golang'],"['Array', 'Two Pointers', 'Greedy']"
3sum-with-multiplicity,Medium,923,['golang'],"['Array', 'Hash Table', 'Two Pointers', 'Sorting', 'Counting']"
last-stone-weight,Easy,1046,['golang'],"['Array', 'Heap (Priority Queue)']"
lru-cache,Medium,146,['golang'],"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']"
kth-largest-element-in-a-stream,Easy,703,['golang'],"['Tree', 'Design', 'Binary Search Tree', 'Heap (Priority Queue)', 'Binary Tree', 'Data Stream']"
lfu-cache,Hard,460,['golang'],"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']"
running-sum-of-1d-array,Easy,1480,['golang'],"['Array', 'Prefix Sum']"
richest-customer-wealth,Easy,1672,['golang'],"['Array', 'Matrix']"
final-value-of-variable-after-performing-operations,Easy,2011,['golang'],"['Array', 'String', 'Simulation']"
maximum-number-of-words-found-in-sentences,Easy,2114,['golang'],"['Array', 'String']"
defanging-an-ip-address,Easy,1108,['golang'],['String']
subrectangle-queries,Medium,1476,['golang'],"['Array', 'Design', 'Matrix']"
top-k-frequent-elements,Medium,347,['golang'],"['Array', 'Hash Table', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting', 'Quickselect']"
letter-combinations-of-a-phone-number,Medium,17,['golang'],"['Hash Table', 'String', 'Backtracking']"
baseball-game,Easy,682,['golang'],"['Array', 'Stack', 'Simulation']"
unique-paths-iii,Hard,980,"['golang', 'python']","['Array', 'Backtracking', 'Bit Manipulation', 'Matrix']"
design-parking-system,Easy,1603,['golang'],"['Design', 'Simulation', 'Counting']"
shift-2d-grid,Easy,1260,['golang'],"['Array', 'Matrix', 'Simulation']"
game-of-life,Medium,289,['golang'],"['Array', 'Matrix', 'Simulation']"
spiral-matrix-ii,Medium,59,['golang'],"['Array', 'Matrix', 'Simulation']"
minimum-number-of-vertices-to-reach-all-nodes,Medium,1557,['golang'],['Graph']
search-in-a-binary-search-tree,Easy,700,['golang'],"['Tree', 'Binary Search Tree', 'Binary Tree']"
trim-a-binary-search-tree,Medium,669,['golang'],"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']"
convert-bst-to-greater-tree,Medium,538,['golang'],"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']"
root-equals-sum-of-children,Easy,2236,['golang'],"['Tree', 'Binary Tree']"
add-two-integers,Easy,2235,['golang'],['Math']
shuffle-the-array,Easy,1470,['golang'],['Array']
sort-an-array,Medium,912,['golang'],"['Array', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Merge Sort', 'Bucket Sort', 'Radix Sort', 'Counting Sort']"
increasing-order-search-tree,Easy,897,['golang'],"['Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']"
kth-smallest-element-in-a-bst,Medium,230,['golang'],"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']"
minimum-number-of-operations-to-move-all-balls-to-each-box,Medium,1769,['golang'],"['Array', 'String']"
n-th-tribonacci-number,Easy,1137,['golang'],"['Math', 'Dynamic Programming', 'Memoization']"
word-break,Medium,139,['golang'],"['Hash Table', 'String', 'Dynamic Programming', 'Trie', 'Memoization']"
fibonacci-number,Easy,509,['golang'],"['Math', 'Dynamic Programming', 'Recursion', 'Memoization']"
maximum-nesting-depth-of-the-parentheses,Easy,1614,['golang'],"['String', 'Stack']"
recover-binary-search-tree,Medium,99,['golang'],"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']"
binary-search-tree-iterator,Medium,173,['golang'],"['Stack', 'Tree', 'Design', 'Binary Search Tree', 'Binary Tree', 'Iterator']"
sqrtx,Easy,69,['golang'],"['Math', 'Binary Search']"
reverse-integer,Medium,7,['golang'],['Math']
4sum,Medium,18,['golang'],"['Array', 'Two Pointers', 'Sorting']"
max-area-of-island,Medium,695,['golang'],"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']"
find-minimum-in-rotated-sorted-array,Medium,153,['golang'],"['Array', 'Binary Search']"
design-hashset,Easy,705,['golang'],"['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']"
design-hashmap,Easy,706,['golang'],"['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']"
encode-and-decode-tinyurl,Medium,535,['golang'],"['Hash Table', 'String', 'Design', 'Hash Function']"
repeated-dna-sequences,Medium,187,['golang'],"['Hash Table', 'String', 'Bit Manipulation', 'Sliding Window', 'Rolling Hash', 'Hash Function']"
zigzag-conversion,Medium,6,['golang'],['String']
longest-palindromic-substring,Medium,5,['golang'],"['String', 'Dynamic Programming']"
merge-nodes-in-between-zeros,Medium,2181,['golang'],"['Linked List', 'Simulation']"
design-underground-system,Medium,1396,['golang'],"['Hash Table', 'String', 'Design']"
merge-k-sorted-lists,Hard,23,['golang'],"['Linked List', 'Divide and Conquer', 'Heap (Priority Queue)', 'Merge Sort']"
3sum-closest,Medium,16,['golang'],"['Array', 'Two Pointers', 'Sorting']"
intersection-of-multiple-arrays,Easy,2248,['golang'],"['Array', 'Hash Table', 'Counting']"
count-lattice-points-inside-a-circle,Medium,2249,['golang'],"['Array', 'Hash Table', 'Math', 'Geometry', 'Enumeration']"
count-number-of-rectangles-containing-each-point,Medium,2250,['golang'],"['Array', 'Binary Search', 'Binary Indexed Tree', 'Sorting']"
peeking-iterator,Medium,284,['golang'],"['Array', 'Design', 'Iterator']"
remove-nth-node-from-end-of-list,Medium,19,['golang'],"['Linked List', 'Two Pointers']"
generate-parentheses,Medium,22,['golang'],"['String', 'Dynamic Programming', 'Backtracking']"
swap-nodes-in-pairs,Medium,24,['golang'],"['Linked List', 'Recursion']"
min-cost-to-connect-all-points,Medium,1584,['golang'],"['Array', 'Union Find', 'Minimum Spanning Tree']"
permutations,Medium,46,['golang'],"['Array', 'Backtracking']"
combination-sum,Medium,39,['golang'],"['Array', 'Backtracking']"
find-first-and-last-position-of-element-in-sorted-array,Medium,34,['golang'],"['Array', 'Binary Search']"
smallest-string-with-swaps,Medium,1202,['golang'],"['Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find']"
longest-consecutive-sequence,Medium,128,['golang'],"['Array', 'Hash Table', 'Union Find']"
number-of-provinces,Medium,547,['golang'],"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']"
number-of-islands,Medium,200,['golang'],"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']"
maximum-depth-of-binary-tree,Easy,104,['golang'],"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']"
path-with-minimum-effort,Medium,1631,['golang'],"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']"
number-of-good-pairs,Easy,1512,['golang'],"['Array', 'Hash Table', 'Math', 'Counting']"
kids-with-the-greatest-number-of-candies,Easy,1431,['golang'],['Array']
subtract-the-product-and-sum-of-digits-of-an-integer,Easy,1281,['golang'],['Math']
number-of-dice-rolls-with-target-sum,Medium,1155,['golang'],['Dynamic Programming']
