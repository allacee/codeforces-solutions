package main

import (
	"sort"
)

func main() {
	println(countWays([][]int{{57, 92}, {139, 210}, {306, 345}, {411, 442}, {533, 589}, {672, 676}, {801, 831}, {937, 940}, {996, 1052}, {1113, 1156}, {1214, 1258}, {1440, 1441}, {1507, 1529}, {1613, 1659}, {1773, 1814}, {1826, 1859}, {2002, 2019}, {2117, 2173}, {2223, 2296}, {2335, 2348}, {2429, 2532}, {2640, 2644}, {2669, 2676}, {2786, 2885}, {2923, 2942}, {3035, 3102}, {3177, 3249}, {3310, 3339}, {3450, 3454}, {3587, 3620}, {3725, 3744}, {3847, 3858}, {3901, 3993}, {4100, 4112}, {4206, 4217}, {4250, 4289}, {4374, 4446}, {4510, 4591}, {4675, 4706}, {4732, 4768}, {4905, 4906}, {5005, 5073}, {5133, 5142}, {5245, 5309}, {5352, 5377}, {5460, 5517}, {5569, 5602}, {5740, 5791}, {5823, 5888}, {6036, 6042}, {6096, 6114}, {6217, 6262}, {6374, 6394}, {6420, 6511}, {6564, 6587}, {6742, 6743}, {6797, 6877}, {6909, 6985}, {7042, 7117}, {7141, 7144}, {7276, 7323}, {7400, 7456}, {7505, 7557}, {7690, 7720}, {7787, 7800}, {7870, 7880}, {8013, 8031}, {8114, 8224}, {8272, 8328}, {8418, 8435}, {8493, 8537}, {8600, 8704}, {8766, 8812}, {8839, 8853}, {9032, 9036}, {9108, 9189}, {9222, 9291}, {9344, 9361}, {9448, 9502}, {9615, 9673}, {9690, 9800}, {9837, 9868}, {85, 96}, {145, 202}, {254, 304}, {372, 411}, {534, 551}, {629, 692}, {727, 787}, {861, 944}, {1041, 1084}, {1133, 1174}, {1260, 1307}, {1339, 1358}, {1478, 1548}, {1580, 1618}, {1694, 1814}, {1848, 1891}, {1936, 1990}, {2058, 2130}})) // 570065479
	println(countWays([][]int{{34, 56}, {28, 29}, {12, 16}, {11, 48}, {28, 54}, {22, 55}, {28, 41}, {41, 44}}
	println(countWays([][]int{{1, 3}, {10, 20}, {2, 5}, {4, 8}}))
	println(countWays([][]int{{1, 3}, {10, 20}, {2, 5}, {4, 8}}))
}

const MOD = 1000000000 + 7

func countWays(ranges [][]int) int {
	n := len(ranges)
	parent := make([]int, n)
	var find func(int) int
	var union func(int, int)
	union = func(x, y int) {
		parent[find(x)] = find(y)
	}
	find = func(x int) int {
		if parent[x] != x {
			parent[x] = find(parent[x])
		}
		return parent[x]
	}
	for i := range parent {
		parent[i] = i
	}

	sort.Slice(ranges, func(i, j int) bool {
		if ranges[i][0] == ranges[j][0] {
			return ranges[i][1] < ranges[i][1]
		}
		return ranges[i][0] < ranges[j][0]
	})

	active := 0
	for i := 1; i < n; i++ {
		if active != -1 {
			if ranges[active][1] >= ranges[i][0] {
				union(active, i)
				if ranges[i][1] > ranges[active][1] {
					active = i
				}
			} else {
				active = -1
			}
		}
		if ranges[i][0] <= ranges[i-1][1] {
			union(i-1, i)
		}
		if active == -1 {
			active = i
		}
	}

	groups := make(map[int]bool)
	for i := range parent {
		groups[find(i)] = true
	}
	size := len(groups)
	var ans uint64 = 1
	for i := 0; i < size; i++ {
		ans = ans * 2 % MOD
	}
	return int(ans)
}
